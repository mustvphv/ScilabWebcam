// This GUI file is generated by guibuilder version 4.2.1
//////////
f=figure('figure_position',[400,50],'figure_size',[900,568],'auto_resize','on','background',[18],'figure_name','Figure n°%d','dockable','off','infobar_visible','off','toolbar_visible','off','menubar_visible','off','default_axes','on','visible','off');
//////////
handles.dummy = 0;
handles.ChargerImage1=uicontrol(f,'unit','normalized','BackgroundColor',[1,1,0],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.800905,0.8465909,0.1538462,0.1022727],'Relief','default','SliderStep',[0.01,0.1],'String','Charger Image 1','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','ChargerImage1','Callback','ChargerImage1_callback(handles)')
handles.ChargerImage2=uicontrol(f,'unit','normalized','BackgroundColor',[1,1,0],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.800905,0.7007576,0.1538462,0.1022727],'Relief','default','SliderStep',[0.01,0.1],'String','Charger Image 2','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','ChargerImage2','Callback','ChargerImage2_callback(handles)')
handles.AxeImage1= newaxes();handles.AxeImage1.margins = [ 0 0 0 0];handles.AxeImage1.axes_bounds = [0.020362,0.0151515,0.4683258,0.4715909];
handles.AxeImage2= newaxes();handles.AxeImage2.margins = [ 0 0 0 0];handles.AxeImage2.axes_bounds = [0.0180995,0.5208333,0.4705882,0.4621212];
handles.AxeImageFinal= newaxes();handles.AxeImageFinal.margins = [ 0 0 0 0];handles.AxeImageFinal.axes_bounds = [0.5169683,0.5227273,0.469457,0.4507576];
handles.MenuPrincipal=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5542986,0.8465909,0.1493213,0.1079545],'Relief','default','SliderStep',[0.01,0.1],'String','MenuLire2|MenuWebcam|MenuFiltres','Style','popupmenu','Value',[1],'VerticalAlignment','middle','Visible','on','Tag','MenuPrincipal','Callback','MenuPrincipal_callback(handles)')


f.visible = "on";


//////////
// Callbacks are defined as below. Please do not delete the comments as it will be used in coming version
//////////


global fn 
fn = "test";
global fn2
fn2 = "test2";

function ImageSortie = lire2(src, dest)
    imagesortie0 = imread(src)
    imagesortie1 = imread(dest)
    
    Rouge0 = imagesortie0(:,:,1);
    Rouge1 = imagesortie1(:,:,1);
    
    Vert0 = imagesortie0(:,:,2);
    Vert1 = imagesortie1(:,:,2);
    
    Bleu0 = imagesortie0(:,:,3);
    Bleu1 = imagesortie1(:,:,3);
    
    ImageSortie = [];
    

    
    
    [n, m] = size(Rouge0);
    
    RougeSortie = [];
    VertSortie = [];
    BleuSortie = [];
  
  
   /* for i=1:n
        disp(i);
        for j=1:m
            if Rouge0(i,j) ~= Rouge1(i, j) then
                //disp(Rouge0(i, j), Rouge1(i, j));
                RougeSortie(i, j) = 0;
            else
                //disp("sinon");
                RougeSortie(i, j) = Rouge0(i, j); 
            end
        end
    end
    */
    
    
    x = Rouge0 - Rouge1;
    RougeSortie = abs(x);

    x = Vert0 - Vert1;
    VertSortie = abs(x);

    x = Bleu0 - Bleu1;
    BleuSortie = abs(x);

    ImageSortie(:,:,1) = RougeSortie
    ImageSortie(:,:,2) = VertSortie
    ImageSortie(:,:,3) = BleuSortie

endfunction

function ImageSortie = lire2Webcam(src, dest)
    imagesortie0 = src
    imagesortie1 = dest
    
    Rouge0 = imagesortie0(:,:,1);//valeur rouge de l'ensemble de l'image
    Rouge1 = imagesortie1(:,:,1);
    
    Vert0 = imagesortie0(:,:,2);
    Vert1 = imagesortie1(:,:,2);
    
    Bleu0 = imagesortie0(:,:,3);
    Bleu1 = imagesortie1(:,:,3);
    
    ImageSortie = [];//matrice à retourner
    

    
    
    //[n, m] = size(Rouge0);
    
    
    RougeSortie = [];//
    VertSortie = [];
    BleuSortie = [];
      
    x = abs(Rouge0) - abs(Rouge1);
    RougeSortie = abs(x);
    //disp(RougeSortie);
    
    [n, m] = size(x);

    count = 0
    difference_count = 0
    handles.texte=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5,0.50,0.47,0.05],'Relief','default','SliderStep',[0.01,0.1],'String','Rien à signaler','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','texte','Callback','')


    for i=1:n
        for j=1:m
            if difference_count > 3000
               then
               break
            end
            if count == 100
                difference_count = difference_count + 1
                disp("difference")
                disp(difference_count)
                count = 0
            end

            if x(i,j) > 3 & x(i,j) < 253
                count = count + 1
                //break
            end
        end
    end
    

    x = Vert0 - Vert1;
    VertSortie = abs(x);
    
    for i=1:n
        for j=1:m
            if difference_count > 3000
               then
               break
            end
            if count == 100
                difference_count = difference_count + 1
                disp("difference")
                disp(difference_count)
                count = 0
            end

            if x(i,j) > 3 & x(i,j) < 253
                count = count + 1
                //break
            end
        end
    end


    x = Bleu0 - Bleu1;
    BleuSortie = abs(x);
    
    for i=1:n
        for j=1:m
            if difference_count > 3000
               then
               break
            end
            if count == 100
                difference_count = difference_count + 1
                disp("difference")
                disp(difference_count)
                count = 0
            end

            if x(i,j) > 3 & x(i,j) < 253
                count = count + 1
                //break
            end
        end
    end
    
    if difference_count > 3000 
        then
        handles.texte=uicontrol(f,'unit','normalized','BackgroundColor',[-1,-1,-1],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','left','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.5,0.50,0.47,0.05],'Relief','default','SliderStep',[0.01,0.1],'String','Alerte quelquechose est passé devant la caméra!','Style','text','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','texte','Callback','')

    end


    ImageSortie(:,:,1) = RougeSortie
    ImageSortie(:,:,2) = VertSortie
    ImageSortie(:,:,3) = BleuSortie

endfunction




//global fn = "test";
//global fn2 = "test2";
function ChargerImage1_callback(handles)
//Write your callback for  ChargerImage1  here
handles.AxeImage1= newaxes();handles.AxeImage1.margins = [ 0 0 0 0];handles.AxeImage1.axes_bounds = [0.020362,0.0151515,0.4683258,0.4715909];handles.AxeImage1.auto_clear = 'on';
global fn
fn = uigetfile('*');
S = imread(fn);
imshow(S);

//handles.fn = fn;
handles.S = S;
handles = resume(handles);


endfunction


function ChargerImage2_callback(handles)
//Write your callback for  ChargerImage2  here
handles.AxeImage2= newaxes();handles.AxeImage2.margins = [ 0 0 0 0];handles.AxeImage2.axes_bounds = [0.0180995,0.5208333,0.4705882,0.4621212];handles.AxeImage2.auto_clear = 'on';
global fn2
fn2 = uigetfile('*');
S2 = imread(fn2);
imshow(S2);

handles.S2 = S2;
handles = resume(handles);


endfunction

function ChargerImageFinal_callback(handles)
//Write your callback for  ImageGrise  here
handles.AxeImageFinal= newaxes();handles.AxeImageFinal.margins = [ 0 0 0 0];handles.AxeImageFinal.axes_bounds = [0.5169683,0.5227273,0.469457,0.4507576];handles.AxeImageFinal.auto_clear = 'on';
//S_TEST = 
//fn3 = uigetfile('*');
//S = imread(fn);
//imshow(S);
fn_ = fn
fn2_ = fn2

S_TEST = lire2(fn_, fn2_);
imshow(S_TEST);

handles.S_TEST = S_TEST;
handles = resume(handles);

endfunction

function FonctionWebcam_callback(handles)

handles.AxeImage1= newaxes();handles.AxeImage1.margins = [ 0 0 0 0];handles.AxeImage1.axes_bounds = [0.020362,0.0151515,0.4683258,0.4715909];

n = camopen(0);
im = camread(n); //get a frame
imshow(im);
im0 = im;

handles.AxeImage2= newaxes();handles.AxeImage2.margins = [ 0 0 0 0];handles.AxeImage2.axes_bounds = [0.0180995,0.5208333,0.4705882,0.4621212];
 
tic();
for cnt = 1:100
    im = camread(n);
    imshow(im);
end


 
t = toc();
disp("FPS : " + string(100/t));
 
avicloseall();

/*global fn
fn = n2
global fn2
fn2 = n

ChargerImageFinal_callback(handles)*/

handles.AxeImageFinal= newaxes();handles.AxeImageFinal.margins = [ 0 0 0 0];handles.AxeImageFinal.axes_bounds = [0.5169683,0.5227273,0.469457,0.4507576];handles.AxeImageFinal.auto_clear = 'on';

    S_WEBCAM = lire2Webcam(im0, im);
    imshow(S_WEBCAM);

    handles.S_WEBCAM = S_WEBCAM;
    handles = resume(handles);


    /*Rouge0 = im0(:,:,1);
    Rouge1 = im(:,:,1);
    
    Vert0 = im0(:,:,2);
    Vert1 = im(:,:,2);
    
    Bleu0 = im0(:,:,3);
    Bleu1 = im(:,:,3);

    ImageSortie = [];
    

    
    
    [n, m] = size(Rouge0);
    
    RougeSortie = [];
    VertSortie = [];
    BleuSortie = [];
    
    x = Rouge0 - Rouge1;
    RougeSortie = abs(x);

    x = Vert0 - Vert1;
    VertSortie = abs(x);

    x = Bleu0 - Bleu1;
    BleuSortie = abs(x);

    ImageSortie(:,:,1) = RougeSortie
    ImageSortie(:,:,2) = VertSortie
    ImageSortie(:,:,3) = BleuSortie*/



endfunction



/*function Menu1_callback(handles)
//Write your callback for  Menu1  here

endfunction*/
function ImageSortie = gris(src)
    imagesortie0 = src
    ImageSortie = rgb2gray(imagesortie0)
endfunction

function ImageGrise_callback(handles)
    im_gris = gris(handles.S_TEST);
    imshow(im_gris)
endfunction


function ImageSortie = canny(src)
    Imagesortie0 = src
    S = rgb2gray(Imagesortie0);
    ImageSortie = edge(S, 'canny');
    
endfunction

function ImageCanny_callback(handles)
    im_canny = canny(handles.S_TEST);
    imshow(im_canny)
endfunction


function ImageSortie = prewitt(src)
    Imagesortie0 = src
    S = rgb2gray(Imagesortie0);
    ImageSortie = edge(S, 'prewitt');
    
endfunction

function ImagePrewitt_callback(handles)
    im_prewitt = prewitt(handles.S_TEST);
    imshow(im_prewitt)
endfunction



function MenuPrincipal_callback(handles)
//Write your callback for  MenuPrincipal  here

//if strcmp(handles.MenuPrincipal.String, "MenuLire2|MenuLire2NOUV") == 0 
  //  then 
if handles.MenuPrincipal.value == 1
    then
    handles.ChargerImageFinal=uicontrol(f,'unit','normalized','BackgroundColor',[1,1,0],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.800905,0.5607576,0.1738462,0.1022727],'Relief','default','SliderStep',[0.01,0.1],'String','Charger Image Finale','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','ChargerImageFinal','Callback','ChargerImageFinal_callback(handles)')

elseif handles.MenuPrincipal.value == 2
    then
    handles.FonctionWebcam=uicontrol(f,'unit','normalized','BackgroundColor',[1,0,0],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.800905,0.5607576,0.1738462,0.1022727],'Relief','default','SliderStep',[0.01,0.1],'String','Charger Image Finale','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','FonctionWebcam','Callback','FonctionWebcam_callback(handles)')
    
elseif handles.MenuPrincipal.value == 3
    then
    handles.ChargerImageFinal=uicontrol(f,'unit','normalized','BackgroundColor',[1,1,0],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.800905,0.5607576,0.1738462,0.1022727],'Relief','default','SliderStep',[0.01,0.1],'String','Charger Image Finale','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','ChargerImageFinal','Callback','ChargerImageFinal_callback(handles)')
    
    handles.ImageGrise=uicontrol(f,'unit','normalized','BackgroundColor',[0.8,0.8,0.8],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.55,0.52,0.1738462,0.1022727],'Relief','default','SliderStep',[0.01,0.1],'String','Filtre Image Grise','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','ImageGrise','Callback','ImageGrise_callback(handles)')
    handles.ImageCanny=uicontrol(f,'unit','normalized','BackgroundColor',[1,1,0],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.55,0.63,0.1738462,0.1022727],'Relief','default','SliderStep',[0.01,0.1],'String','Filtre Image Canny','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','ImageCanny','Callback','ImageCanny_callback(handles)')
    handles.ImagePrewitt=uicontrol(f,'unit','normalized','BackgroundColor',[1,1,0],'Enable','on','FontAngle','normal','FontName','Tahoma','FontSize',[12],'FontUnits','points','FontWeight','normal','ForegroundColor',[-1,-1,-1],'HorizontalAlignment','center','ListboxTop',[],'Max',[1],'Min',[0],'Position',[0.55,0.74,0.1738462,0.1022727],'Relief','default','SliderStep',[0.01,0.1],'String','Filtre Image Prewitt','Style','pushbutton','Value',[0],'VerticalAlignment','middle','Visible','on','Tag','ImagePrewitt','Callback','ImagePrewitt_callback(handles)')



end    


endfunction


